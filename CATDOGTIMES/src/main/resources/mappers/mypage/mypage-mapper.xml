<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.catdog.times.mypage.model.mapper.MypageMapper">

	<resultMap id="myPageResultMap" type="MypageDTO">
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="MEMBER_PW" property="memberPw"/>
		<result column="MEMBER_NAME" property="memberName"/>
		<result column="MEMBER_GENDER" property="memberGender"/>
		<result column="MEMBER_NICKNAME" property="memberNickname"/>
		<result column="MEMBER_EMAIL" property="memberEmail"/>
		<result column="MEMBER_IS" property="memberIs"/>
		<result column="MEMBER_TYPE" property="memberType"/>
		<result column="MEMBER_WARN" property="memberWarn"/>
		<result column="MEMBER_CREATE_DATE" property="memberCreateDate"/>
		<result column="MODIFY_DATE" property="modifyDate"/>
		<result column="MEMBER_PHOTO" property="memberPhoto"/>
		<result column="MEMBER_ADDRESS" property="memberAddress"/>
		<result column="MEMBER_ZIPCODE" property="memberZipcode"/>
		<result column="MEMBER_DETAIL_ADDRESS" property="memberDetailAddress"/>
		<result column="MEMBER_SNS_ID" property="memberSnsId"/>
		
		<result column="POST_TOTAL" property="postTotal"/>
		<result column="FOLLOWER_CNT" property="followerCnt"/>
		<result column="FOLLOWING_CNT" property="followingCnt"/>
		<result column="MEMBER_ANIMAL_REG_NO" property="animalRegNo"/>
	</resultMap>

	<resultMap id="postContentResultMap" type="PostContentDTO">
		<result column="POST_ID" property="postId"/>
		<result column="POST_CONTENT" property="postContent"/>
		<result column="POST_CREATE_DATE" property="postCreateDate"/>
		<result column="POST_UPDATE_DATE" property="postUpdateDate"/>
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="IMAGE_ID" property="imageId"/>
		<result column="IMAGE_SAVED_NAME" property="imageSavedName"/>
		<result column="IMAGE_ORIGINAL_NAME" property="imageOriginalName"/>
		<result column="REPLY_CNT" property="replyCnt"/>
		<result column="LIKE_CNT" property="likeCnt"/>
		<result column="MEMBER_NICKNAME" property="memberNickname"/>		
	</resultMap>
	
	<resultMap id="followListResultMap" type="FollowMemberDTO">
		<result column="FOLLOW_ID" property="followId"/>
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="MEMBER_NAME" property="memberName"/>
		<result column="MEMBER_NICKNAME" property="memberNickname"/>
		<result column="MEMBER_PHOTO" property="memberPhoto"/>
		<result column="TYPE" property="type"/>
	</resultMap>	
	<resultMap id="insertMemberOut" type="MemberOutDTO">
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="OUT_REASONS" property="outReasons"/>
		<result column="OUT_DATE" property="outDate"/>
	</resultMap>
	
	
	<select id="findByID" resultMap="myPageResultMap" parameterType="String">
		SELECT M.MEMBER_NO
		     , M.MEMBER_ID
		     , M.MEMBER_PW
		     , M.MEMBER_NAME
		     , M.MEMBER_GENDER
		     , M.MEMBER_NICKNAME
		     , M.MEMBER_EMAIL
		     , M.MEMBER_IS
		     , M.MEMBER_TYPE
		     , M.MEMBER_WARN
		     , M.MEMBER_CREATE_DATE
		     , M.MODIFY_DATE
		     , NVL(M.MEMBER_PHOTO,'undefined.jpg')       AS MEMBER_PHOTO
		     , M.MEMBER_ADDRESS
		     , M.MEMBER_ZIPCODE
		     , M.MEMBER_DETAIL_ADDRESS
		     , M.MEMBER_SNS_ID
		     , (SELECT COUNT(POST_ID)
                  FROM POST P
                 WHERE P.MEMBER_NO = M.MEMBER_NO ) AS POST_TOTAL 
             , (SELECT  COUNT(FOLLOWER_ID)   
                  FROM FOLLOW F
                 WHERE F.FOLLOWER_ID = M.MEMBER_NO ) AS FOLLOWER_CNT
             , (SELECT  COUNT(FOLLOWING_ID)   
                  FROM FOLLOW F 
                 WHERE F.FOLLOWING_ID = M.MEMBER_NO ) AS FOLLOWING_CNT    
             , M.MEMBER_ANIMAL_REG_NO         
                 
		FROM MEMBER M
		WHERE M.MEMBER_ID = #{memberId}	
	</select>
	
	<select id="selectPostContent" resultMap="postContentResultMap" parameterType="Map">
		SELECT P.POST_ID
		     , P.POST_CONTENT
		     , P.POST_CREATE_DATE
		     , P.POST_UPDATE_DATE
		     , P.MEMBER_NO
		     , I.IMAGE_ID 
		     , I.IMAGE_SAVED_NAME 
		     , I.IMAGE_ORIGINAL_NAME 
		     , (SELECT COUNT(*)
		          FROM REPLY R
		         WHERE R.POST_ID = P.POST_ID )   AS REPLY_CNT 
		     , (SELECT COUNT(*)
		          FROM POST_LIKE LI
		         WHERE LI.POST_ID = P.POST_ID )  AS LIKE_CNT  
             , M.MEMBER_NICKNAME 		          		     
		  FROM POST P
	 LEFT JOIN IMAGE I ON P.POST_ID = I.POST_ID AND ROWNUM = 1
	 LEFT JOIN MEMBER M ON M.MEMBER_NO  = P.MEMBER_NO AND ROWNUM = 1 
  		 WHERE 1=1	 
	  <choose>
    	<when test="searchType != null and searchType == 'postlike' ">
    	  AND P.POST_ID IN (SELECT POST_ID 
                      	      FROM POST_LIKE 
                             WHERE MEMBER_NO = #{memberNo} )
    	</when>
        <when test="searchType != null and searchType == 'bookmark' ">
		  AND P.POST_ID IN (SELECT POST_ID 
                   		    FROM BOOKMARK 
                   		   WHERE MEMBER_NO = #{memberNo} ) 
        </when>
        <otherwise>
          AND P.MEMBER_NO = #{memberNo} 
        </otherwise>
      </choose>
	</select>
	
	
	<update id="updateMemberInfo" parameterType="MypageDTO">
		UPDATE MEMBER
		SET
			MEMBER_PW = 		NVL(#{memberPw}, 	MEMBER_PW),
			MEMBER_NAME = 		NVL(#{memberName},	MEMBER_NAME),
			MEMBER_GENDER = 	NVL(#{memberGender},MEMBER_GENDER),
			MEMBER_NICKNAME = 	NVL(#{memberNickname},MEMBER_NICKNAME),
			MEMBER_EMAIL = 		NVL(#{memberEmail},	MEMBER_EMAIL),
			MEMBER_PHOTO = 		NVL(#{memberPhoto},	MEMBER_PHOTO),
			MEMBER_ADDRESS = 	NVL(#{memberAddress},MEMBER_ADDRESS),
			MEMBER_DETAIL_ADDRESS = 	NVL(#{memberDetailAddress},MEMBER_DETAIL_ADDRESS),
			MEMBER_ZIPCODE = 	NVL(#{memberZipcode},MEMBER_ZIPCODE),
			MODIFY_DATE = 		SYSDATE,
			MEMBER_ANIMAL_REG_NO = 	NVL(#{animalRegNo},MEMBER_ANIMAL_REG_NO)
		WHERE
			MEMBER_NO = #{memberNo}
	</update>
	
	<select id='selectFollowList' resultMap="followListResultMap" parameterType="Map">
	  <choose>
    	<when test="type != null and type == 'follower' ">
          SELECT M.MEMBER_NO         
               , M.MEMBER_ID
               , M.MEMBER_NICKNAME
               , M.MEMBER_PHOTO
               , F.FOLLOW_ID 
               , 'follower'          AS TYPE
            FROM FOLLOW F    	
      INNER JOIN MEMBER M ON F.FOLLOWING_ID  = M.MEMBER_NO
           WHERE 1=1
             AND F.FOLLOWER_ID = #{memberNo}         
    	</when>
        <when test="type != null and type == 'following' ">
          SELECT M.MEMBER_NO         
               , M.MEMBER_ID
               , M.MEMBER_NICKNAME
               , M.MEMBER_PHOTO 
               , F.FOLLOW_ID
               , 'following'         AS TYPE
            FROM FOLLOW F        
      INNER JOIN MEMBER M ON F.FOLLOWER_ID = M.MEMBER_NO
           WHERE 1=1                     
             AND F.FOLLOWING_ID = #{memberNo}        
         </when>
       </choose>                          
	</select>
		
    <delete id="deleteFollower" parameterType="Map">
      DELETE FROM FOLLOW 
      WHERE  FOLLOW_ID = #{followId}     
    </delete>	

    <update id="withdrawal" parameterType="MemberOutDTO">
     	UPDATE MEMBER
		SET
      		MODIFY_DATE = 	SYSDATE,
			MEMBER_IS = 	NVL('N',MEMBER_IS)
		WHERE
			MEMBER_NO = #{memberNo}
    </update>
	<insert id="memberout" parameterType="MemberOutDTO">
		INSERT INTO MEMBER_OUT (
			MEMBER_NO,
	        OUT_REASONS,
	        OUT_DATE
		) VALUES(
			#{memberNo},
			#{outReasons},
			SYSDATE
		)	
	</insert>

</mapper>